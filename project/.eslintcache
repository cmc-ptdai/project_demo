[{"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\store.js":"4","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\ScrollToTop.js":"5","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\router.js":"6","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\productApi.js":"7","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\products.js":"8","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\header\\Header.js":"9","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\index.js":"10","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\index.js":"11","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actionType.js":"12","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\axiosClient.js":"13","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\NotFound.js":"14","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Cart.js":"15","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Products.js":"16","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\ProfileProduct.js":"17","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\SearchProductByName.js":"18","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Home.js":"19","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\login\\index.js":"20","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\signUp\\index.js":"21","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\userAction.js":"22","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\MenuItem.js":"23","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\Search.js":"24","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\products.js":"25","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\search.js":"26","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\user.js":"27","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\userApi.js":"28","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\CardItem.js":"29","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\search.js":"30","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\Slide\\Slide.js":"31","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\sort\\Sort.js":"32","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\search\\SearchProduct.js":"33","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\groupProduct\\index.jsx":"34","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\MyPagination.js":"35","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\order.js":"36"},{"size":572,"mtime":1622484296330,"results":"37","hashOfConfig":"38"},{"size":2487,"mtime":1626807956171,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1620834588413,"results":"40","hashOfConfig":"38"},{"size":402,"mtime":1620834588412,"results":"41","hashOfConfig":"38"},{"size":257,"mtime":1620992098280,"results":"42","hashOfConfig":"38"},{"size":1471,"mtime":1627513009003,"results":"43","hashOfConfig":"38"},{"size":598,"mtime":1626800974666,"results":"44","hashOfConfig":"38"},{"size":1251,"mtime":1626356909610,"results":"45","hashOfConfig":"38"},{"size":3212,"mtime":1627492363744,"results":"46","hashOfConfig":"38"},{"size":3330,"mtime":1627517999063,"results":"47","hashOfConfig":"38"},{"size":279,"mtime":1620834588410,"results":"48","hashOfConfig":"38"},{"size":1646,"mtime":1627497323991,"results":"49","hashOfConfig":"38"},{"size":469,"mtime":1620834588379,"results":"50","hashOfConfig":"38"},{"size":191,"mtime":1620834588395,"results":"51","hashOfConfig":"38"},{"size":13961,"mtime":1627495287786,"results":"52","hashOfConfig":"38"},{"size":3215,"mtime":1627517611211,"results":"53","hashOfConfig":"38"},{"size":11359,"mtime":1627515059765,"results":"54","hashOfConfig":"38"},{"size":3240,"mtime":1627516944846,"results":"55","hashOfConfig":"38"},{"size":1458,"mtime":1620992098320,"results":"56","hashOfConfig":"38"},{"size":5290,"mtime":1627500608414,"results":"57","hashOfConfig":"38"},{"size":2608,"mtime":1627519307887,"results":"58","hashOfConfig":"38"},{"size":2638,"mtime":1627497458045,"results":"59","hashOfConfig":"38"},{"size":786,"mtime":1620834588388,"results":"60","hashOfConfig":"38"},{"size":1101,"mtime":1620834588390,"results":"61","hashOfConfig":"38"},{"size":3050,"mtime":1626367834117,"results":"62","hashOfConfig":"38"},{"size":305,"mtime":1620834588411,"results":"63","hashOfConfig":"38"},{"size":13236,"mtime":1627500350308,"results":"64","hashOfConfig":"38"},{"size":379,"mtime":1620910963167,"results":"65","hashOfConfig":"38"},{"size":2059,"mtime":1627512023964,"results":"66","hashOfConfig":"38"},{"size":153,"mtime":1620834588408,"results":"67","hashOfConfig":"38"},{"size":1519,"mtime":1620834588382,"results":"68","hashOfConfig":"38"},{"size":806,"mtime":1620834588403,"results":"69","hashOfConfig":"38"},{"size":2504,"mtime":1627517509421,"results":"70","hashOfConfig":"38"},{"size":1535,"mtime":1620834588399,"results":"71","hashOfConfig":"38"},{"size":663,"mtime":1627505672783,"results":"72","hashOfConfig":"38"},{"size":354,"mtime":1626705050119,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"2g4tzt",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\index.js",[],["150","151"],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\store.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\ScrollToTop.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\router.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\productApi.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\header\\Header.js",["152"],"import React, { useState } from 'react'\nimport './style.scss'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Avatar } from 'antd'\nimport { getUser as getUserAction }  from '../../redux/actions/userAction'\nimport { UserOutlined } from '@ant-design/icons'\n\nconst Header = () => {\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const myStore = useSelector(store => store.userReducer.user)\n  const [keyActive, setKeyActive] = useState('')\n  const onActive = (key) => {\n    setKeyActive(key)\n  }\n\n  const logout = () => {\n    const newCart = JSON.parse(localStorage.getItem('cart'))\n    const user = {\n      cart: newCart,\n    }\n    localStorage.removeItem('userID')\n    dispatch(getUserAction(user))\n    history.push('/')\n    setKeyActive('')\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"header__content\">\n        <Row>\n          <Col span={5} offset={1} className=\"login\">\n            {\n              myStore && (\n                myStore.id ? (\n                  <div className=\"login__imgUser\">\n                    {\n                      myStore.img ? (\n                        <div>\n                          <Avatar size={50} src={myStore.img} />\n                          <span>{ myStore.name }</span>\n                        </div>\n                      ) : (\n                        <div>\n                          <Avatar size={50} icon={<UserOutlined />} />\n                          <span>{ myStore.name }</span>\n                        </div>\n                      )\n                    }\n                    <div className=\"login__listchose\">\n                      <ul>\n                        <Link to='/login'>\n                          <li onClick={() => onActive(1)}\n                            style={{backgroundColor: keyActive === 1 ? '#ccc' : ''}}\n                          >\n                            <i className=\"fas fa-user-tie\"/>thông tin cá nhân\n                          </li>\n                        </Link>\n\n                        <Link to='/login'>\n                          <li onClick={() => onActive(2)} style={{backgroundColor: keyActive === 2 ? '#ccc' : ''}}>\n                            <i className=\"fas fa-cart-plus\"/>đơn hàng\n                          </li>\n                        </Link>\n\n                        <Link to='#'>\n                          <li onClick={() => logout()}>\n                            <i className=\"fas fa-sign-out-alt\"/>logout\n                          </li>\n                        </Link>\n                      </ul>\n                    </div>\n                  </div>\n                ) : <Link to='/login'>Đăng Nhập</Link>\n              )\n            }\n          </Col>\n          <Col span={12} className=\"logo\">\n            <img src=\"/logo2.png\"/>\n          </Col>\n          <Col span={5} className=\"cart\">\n            <Link to=\"/cart\">\n              <i className=\"fab fa-opencart\">\n                {\n                  myStore && (<span>{myStore.cart.length}</span>)\n                }\n              </i>\n            </Link>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actionType.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\axiosClient.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\NotFound.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Cart.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\ProfileProduct.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\SearchProductByName.js",["153"],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Home.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\login\\index.js",["154"],"import React, { useEffect, useState } from 'react'\nimport { Form, Input, Button, Modal } from 'antd';\nimport { useDispatch } from 'react-redux'\nimport {Link , useHistory } from \"react-router-dom\"\nimport UserApi from '../../api/userApi'\nimport './style.scss';\nimport {\n  pushCartLocalInCartUser as pushCartLocalInCartUserAction\n} from '../../redux/actions/userAction'\n\n\nconst tailLayout = {\n  wrapperCol: { offset: 6, span: 18 },\n};\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 16 },\n};\n\nconst Login = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState([])\n  const [user, setUser] = useState({})\n  const [visible, setVisible] = useState(false)\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const fetchUser = async () => {\n    const response = await UserApi.getUser()\n    setListUser(response)\n  }\n\n  useEffect (() => {\n    fetchUser();\n  },[])\n\n  const onFinish = (values) => {\n    const user = listUser.filter(item => (item.userName === values.username && item.password === values.password))\n    if (user.length > 0) {\n      const cartLocal = JSON.parse(localStorage.getItem('cart'))\n      if (cartLocal.length > 0) {\n        setUser(user[0]);\n        setVisible(true);\n      } else {\n        const passwordBase = btoa(user[0].id)\n        localStorage.setItem('userID', passwordBase);\n        history.push('/')\n      }\n    } else {\n      alert(\"sai tài khoản hoặc mật khẩu\")\n    }\n    //console.log('Success:', values);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n    setUser({});\n  };\n\n  const noAddCartLocal = () => {\n    const passwordBase = btoa(user.id)\n    localStorage.setItem('userID', passwordBase);\n    setUser({});\n    setTimeout(() => {\n      history.push('/')\n    }, 500);\n    setVisible(false);\n  }\n\n  const yesAddCartLocal = () => {\n    const cartLocal = JSON.parse(localStorage.getItem('cart'));\n    const newCartLocal = []\n    const valueDispatch = {\n      user: user,\n      cartLocal: cartLocal,\n    }\n    dispatch(pushCartLocalInCartUserAction(valueDispatch))\n    localStorage.setItem('cart', JSON.stringify(newCartLocal))\n    const passwordBase = btoa(user.id)\n    localStorage.setItem('userID', passwordBase);\n    setTimeout(() => {\n      history.push('/')\n    }, 500);\n    setVisible(false);\n  }\n\n  const onFinishPasswordRetrieval = (values) => {\n    //console.log('Success:', values);\n  };\n\n  const onFinishFailedPasswordRetrieval = (errorInfo) => {\n    // console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"row\">\n        <div className=\"col-6 login__left\">\n          <p>Nếu bạn đã có tài khoản, đăng nhập tại đây</p>\n          <Form\n            name=\"login\"\n            {...layout}\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button className=\"login__btn--login\" type=\"primary\" htmlType=\"submit\">\n                Đăng nhập\n              </Button>\n              <Link to='/singup'>\n                <Button type=\"primary\" danger htmlType=\"submit\">\n                  Đăng ký\n                </Button>\n              </Link>\n            </Form.Item>\n          </Form>\n        </div>\n\n        <div className=\"col-6 login__right\">\n          <p>Bạn quên mật khẩu?</p>\n          <Form\n            name=\"password retrieval\"\n            initialValues={{ remember: true }}\n            onFinish={onFinishPasswordRetrieval}\n            onFinishFailed={onFinishFailedPasswordRetrieval}\n          >\n            <Form.Item\n              label=\"Username\"\n              name=\"usernameRetrieval\"\n              rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Lấy lại mật khẩu\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n      <div className=\"login__modal\">\n        <Modal\n          title=\"Thông báo\"\n          visible={visible}\n          confirmLoading={confirmLoading}\n          onCancel={handleCancel}\n        >\n          <p>bạn đang có một số sản phẩm trong giỏ hàng đã thêm lúc chưa đăng nhập, bạn có muốn thêm sản phẩm đó vào giở hàng của mình không?</p>\n        <div className=\"group__button__modal\">\n          <Button type=\"primary\" danger onClick={noAddCartLocal}>\n            không\n          </Button>\n          <Button type=\"primary\" onClick={yesAddCartLocal}>\n            Dồng ý\n          </Button>\n        </div>\n        </Modal>\n      </div>\n    </div>\n  )\n}\n\nexport default Login;\n","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\signUp\\index.js",["155"],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\userAction.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\MenuItem.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\Search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\user.js",["156"],"import userApi from '../../api/userApi';\nimport orderApi from '../../api/order';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  GET_USERS,\n  ADD_CART,\n  INCREMENT_PROJECT,\n  DECREMENT_PROJECT,\n  DELETE_ITEM_CART,\n  NUMBER_INPUT,\n  DELETE_LIST_ITEM_CART,\n  PAY_CART,\n  ADD_CART_BY_PROFILE,\n  PAY_CART_NO_USER,\n  ADD_CART_NO_USER,\n  ADD_ORDER,\n  ADD_CART_BY_PROFILE_NO_USER,\n  ADD_ORDER_NO_USER,\n  INCREMENT_PROJECT_NO_USER,\n  DECREMENT_PROJECT_NO_USER,\n  DELETE_ITEM_CART_NO_USER,\n  DELETE_LIST_ITEM_CART_NO_USER,\n  NUMBER_INPUT_NO_USER,\n  PUSH_CART_LOCAL_IN_CART_USER,\n} from '../actionType'\n\nconst initialState = {\n  user: {\n    cart: [],\n  }\n}\n\nconst useReducer  = (state = initialState, action) => {\n  const user = {...state.user}\n  let cart = user.cart\n  const order = user.order\n  const idUser = user.id\n\n  switch (action.type) {\n    case GET_USERS:{\n      return {\n        ...state,\n        user: action.payload\n      }\n    }\n    // gộp các mặt hàng khi chưa đăng nhập và sau khi đăng nhập có trước ở tài khoản\n    // lặp cart ko có user xem có chùng với sản phẩm nào trong tài khoản\n    // có thì cộng 2 count lại còn không có thì thêm mới cart\n\n    case ADD_CART: {\n      let cartAction = user.cart\n      let newUser = {}\n      if (cartAction.length >= 0) {\n        const index = cartAction.findIndex(item => item.id === action.payload.id)\n        if (index !== -1) {\n          const newData = {\n            ...cartAction[index],\n            count: cartAction[index].count + 1,\n          }\n\n          cartAction.splice(index, 1 , newData)\n          newUser = {\n            ...user,\n            cart: cartAction\n          }\n\n          userApi.addCart(user.id, newUser)\n        } else {\n          const newData = {\n            id: action.payload.id,\n            name: action.payload.name,\n            img: action.payload.img,\n            price: action.payload.price,\n            countPay: action.payload.countPay,\n            count: 1,\n          }\n          cartAction.push(newData)\n          newUser = {\n            ...user,\n            cart: cartAction\n          }\n\n          userApi.addCart(user.id, newUser)\n        }\n      } else {\n        const newData = {\n          id: action.payload.id,\n          name: action.payload.name,\n          img: action.payload.img,\n          price: action.payload.price,\n          countPay: action.payload.countPay,\n          count: 1,\n        }\n        cartAction.push(newData)\n        newUser = {\n          ...user,\n          cart: cartAction\n        }\n        userApi.addCart(user.id, newUser)\n      }\n      return {\n        ...state,\n        user: newUser\n      }\n    }\n    /* falls through */\n\n    case ADD_CART_BY_PROFILE: {\n      let cartAction = user.cart\n      let newData = {}\n      let newUser = {}\n        const index = cartAction.findIndex(item => item.id === action.payload.product.id)\n        if (index !== -1) {\n          newData = {\n            ...cartAction[index],\n            count: cartAction[index].count + action.payload.number,\n          }\n\n          cartAction.splice(index, 1 , newData)\n          newUser = {\n            ...user,\n            cart: cartAction\n          }\n          userApi.addCart(user.id, newUser)\n        } else {\n          newData = {\n            id: action.payload.product.id,\n            name: action.payload.product.name,\n            img: action.payload.product.img,\n            price: action.payload.product.price,\n            count: action.payload.number,\n          }\n          cartAction.push(newData)\n          newUser = {\n            ...user,\n            cart: cartAction\n          }\n          userApi.addCart(user.id, newUser)\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n    }\n\n    case INCREMENT_PROJECT:{\n      const index = cart.findIndex(item => item.id === action.payload)\n        if (index !== -1) {\n          const number = cart[index].count + 1;\n          if (number >= cart[index].countPay) {\n            cart[index].count = cart[index].countPay\n          } else {\n            cart[index].count =number\n          }\n        }\n        userApi.addCart(user.id, user)\n        return {\n          ...state,\n          user: user\n        }\n    }\n\n    case DECREMENT_PROJECT:{\n      const index = cart.findIndex(item => item.id === action.payload)\n        if (index !== -1) {\n          if (cart[index].count  - 1 === 0 ) {\n            cart[index].count = 1\n          }\n          else {\n            cart[index].count = cart[index].count  - 1\n          }\n\n        }\n\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case NUMBER_INPUT: {\n      const index = cart.findIndex(item => item.id === action.payload.id)\n      if(isNaN(action.payload.value) || action.payload.value <= 0) {\n\n          cart[index].count = 1\n\n          userApi.addCart(user.id, user)\n          return {\n            ...state,\n            user: user\n          }\n      } else {\n        if (Number(action.payload.value) > cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = Number(action.payload.value)\n        }\n\n        userApi.addCart(user.id, user)\n        return {\n          ...state,\n          user: user\n        }\n      }\n    }\n\n    case DELETE_ITEM_CART: {\n      user.cart = user.cart.filter(item => item.id !== action.payload)\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_LIST_ITEM_CART: {\n      action.payload.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem)\n      });\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case PAY_CART: {\n      const listProduct = []\n      let money = 0\n      action.payload.forEach(item => {\n        cart.forEach(elem => {\n          //xét trương hợp hết hàng\n          if (item === elem.id) {\n            listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: idUser,\n        listProduct: listProduct,\n        money: money,\n        status: 0,\n      }\n      order.push(newOder)\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case PAY_CART_NO_USER: {\n      action.payload.listId.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem)\n      })\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case ADD_CART_NO_USER: {\n      const cartLocal = localStorage.getItem('cart')\n      if(cartLocal) {\n        let newCartLocal = JSON.parse(cartLocal)\n        const index = newCartLocal.findIndex(item => item.id === action.payload.id)\n        if (index !== -1) {\n          const newData = {\n            ...newCartLocal[index],\n            count: newCartLocal[index].count + 1,\n          }\n\n          newCartLocal.splice(index, 1 , newData)\n        } else {\n          const newData = {\n            id: action.payload.id,\n            name: action.payload.name,\n            img: action.payload.img,\n            price: action.payload.price,\n            countPay: action.payload.countPay,\n            count: 1,\n          }\n          newCartLocal.push(newData)\n        }\n        localStorage.setItem('cart', JSON.stringify(newCartLocal))\n        const newUser = {\n          ...user,\n          cart: newCartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n      } else {\n        const cartLocal = []\n        const newData = {\n          id: action.payload.id,\n          name: action.payload.name,\n          img: action.payload.img,\n          price: action.payload.price,\n          countPay: action.payload.countPay,\n          count: 1,\n        }\n        cartLocal.push(newData)\n        localStorage.setItem('cart', JSON.stringify(cartLocal))\n        const newUser = {\n          ...user,\n          cart: cartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n      }\n    }\n\n    case ADD_CART_BY_PROFILE_NO_USER: {\n      let cartLocal = JSON.parse(localStorage.getItem('cart'))\n      let newData = {}\n        const index = cartLocal.findIndex(item => item.id === action.payload.product.id)\n        if (index !== -1) {\n          newData = {\n            ...cartLocal[index],\n            count: cartLocal[index].count + action.payload.number,\n          }\n\n          cartLocal.splice(index, 1 , newData)\n          localStorage.setItem('cart', JSON.stringify(cartLocal))\n        } else {\n          newData = {\n            id: action.payload.product.id,\n            name: action.payload.product.name,\n            img: action.payload.product.img,\n            price: action.payload.product.price,\n            count: action.payload.number,\n          }\n          cartLocal.push(newData)\n          localStorage.setItem('cart', JSON.stringify(cartLocal))\n        }\n        const newUser = {\n          ...user,\n          cart: cartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n    }\n\n    case ADD_ORDER: {\n      const listProduct = []\n      let money = 0\n      action.payload.forEach(item => {\n        cart.forEach(elem => {\n          if (item === elem.id ) {\n            listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: idUser,\n        listProduct: listProduct,\n        money: money,\n        status: 0,\n      }\n      orderApi.addOrder(newOder)\n      return state\n    }\n\n    case ADD_ORDER_NO_USER: {\n      const listProduct = []\n      let money = 0\n      action.payload.listId.forEach(item => {\n        cart.forEach(elem => {\n          if (item === elem.id ) {\n            listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: '',\n        listProduct: listProduct,\n        address: action.payload.profile.address,\n        email: action.payload.profile.email,\n        phone: action.payload.profile.phone,\n        username: action.payload.profile.username,\n        money: money,\n        status: 0,\n      }\n      orderApi.addOrder(newOder)\n      return state\n    }\n\n    case INCREMENT_PROJECT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload)\n      if (index !== -1) {\n        const number = cart[index].count + 1;\n        if (number >= cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = number\n        }\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DECREMENT_PROJECT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload)\n      if (index !== -1) {\n        if (cart[index].count  - 1 === 0 ) {\n          cart[index].count = 1\n        }\n        else {\n          cart[index].count = cart[index].count  - 1\n        }\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_ITEM_CART_NO_USER: {\n      user.cart = user.cart.filter(item => item.id !== action.payload)\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_LIST_ITEM_CART_NO_USER: {\n      action.payload.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem)\n      });\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case NUMBER_INPUT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload.id)\n      if(isNaN(action.payload.value) || action.payload.value <= 0) {\n          cart[index].count = 1\n          localStorage.setItem('cart', JSON.stringify(cart))\n          return {\n            ...state,\n            user: user\n          }\n      } else {\n        if (Number(action.payload.value) > cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = Number(action.payload.value)\n        }\n\n        localStorage.setItem('cart', JSON.stringify(cart))\n        return {\n          ...state,\n          user: user\n        }\n      }\n    }\n\n    case PUSH_CART_LOCAL_IN_CART_USER: {\n      let newUser = action.payload.user\n      let cartLocal = action.payload.cartLocal\n      cartLocal.forEach(item => {\n        const index = newUser.cart.findIndex(elem => elem.id === item.id)\n        if (index !== -1) {\n          const newData = {\n            ...newUser.cart[index],\n            count: newUser.cart[index].count + item.count,\n          }\n          newUser.cart.splice(index, 1 , newData)\n        } else {\n          newUser.cart.push(item)\n        }\n      })\n      userApi.addCart(newUser.id, newUser)\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default useReducer\n","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\userApi.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\CardItem.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\Slide\\Slide.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\sort\\Sort.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\search\\SearchProduct.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\groupProduct\\index.jsx",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\MyPagination.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\order.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":79,"column":13,"nodeType":"163","endLine":79,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":26,"column":26,"nodeType":"166","messageId":"167","endLine":26,"endColumn":43},{"ruleId":"164","severity":1,"message":"169","line":2,"column":44,"nodeType":"166","messageId":"167","endLine":2,"endColumn":49},{"ruleId":"170","severity":1,"message":"171","line":501,"column":5,"nodeType":"172","messageId":"173","endLine":502,"endColumn":19},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'CardItem' is defined but never used.","Identifier","unusedVar","'setConfirmLoading' is assigned a value but never used.","'Alert' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]