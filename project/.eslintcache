[{"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\reportWebVitals.js":"3","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\store.js":"4","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\ScrollToTop.js":"5","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\router.js":"6","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\productApi.js":"7","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\products.js":"8","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\header\\Header.js":"9","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\index.js":"10","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\index.js":"11","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actionType.js":"12","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\axiosClient.js":"13","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\NotFound.js":"14","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Cart.js":"15","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Products.js":"16","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\ProfileProduct.js":"17","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\SearchProductByName.js":"18","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Home.js":"19","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\login\\index.js":"20","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\signUp\\index.js":"21","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\userAction.js":"22","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\MenuItem.js":"23","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\Search.js":"24","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\products.js":"25","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\search.js":"26","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\user.js":"27","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\userApi.js":"28","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\CardItem.js":"29","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\search.js":"30","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\Slide\\Slide.js":"31","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\sort\\Sort.js":"32","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\search\\SearchProduct.js":"33","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\groupProduct\\index.jsx":"34","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\MyPagination.js":"35","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\order.js":"36","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\listBanner\\index.js":"37","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\listBannerheader\\index.js":"38","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\footer\\Footer.js":"39","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\contact\\index.js":"40","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\introduce\\index.js":"41"},{"size":591,"mtime":1627790935058,"results":"42","hashOfConfig":"43"},{"size":2741,"mtime":1627790935019,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1627790935066,"results":"45","hashOfConfig":"43"},{"size":402,"mtime":1627790935065,"results":"46","hashOfConfig":"43"},{"size":257,"mtime":1627790935021,"results":"47","hashOfConfig":"43"},{"size":1692,"mtime":1627790935066,"results":"48","hashOfConfig":"43"},{"size":628,"mtime":1627790935023,"results":"49","hashOfConfig":"43"},{"size":1317,"mtime":1627790935061,"results":"50","hashOfConfig":"43"},{"size":3315,"mtime":1627790935028,"results":"51","hashOfConfig":"43"},{"size":3467,"mtime":1627790935032,"results":"52","hashOfConfig":"43"},{"size":279,"mtime":1627790935063,"results":"53","hashOfConfig":"43"},{"size":1688,"mtime":1627790935060,"results":"54","hashOfConfig":"43"},{"size":469,"mtime":1627790935021,"results":"55","hashOfConfig":"43"},{"size":191,"mtime":1627790935041,"results":"56","hashOfConfig":"43"},{"size":15682,"mtime":1627845769686,"results":"57","hashOfConfig":"43"},{"size":3352,"mtime":1627790935041,"results":"58","hashOfConfig":"43"},{"size":11382,"mtime":1627846176925,"results":"59","hashOfConfig":"43"},{"size":3316,"mtime":1627790935033,"results":"60","hashOfConfig":"43"},{"size":1531,"mtime":1627790935039,"results":"61","hashOfConfig":"43"},{"size":5364,"mtime":1627790935030,"results":"62","hashOfConfig":"43"},{"size":2565,"mtime":1627790935057,"results":"63","hashOfConfig":"43"},{"size":2799,"mtime":1627790935062,"results":"64","hashOfConfig":"43"},{"size":786,"mtime":1627790935031,"results":"65","hashOfConfig":"43"},{"size":1101,"mtime":1627790935033,"results":"66","hashOfConfig":"43"},{"size":3050,"mtime":1627831755570,"results":"67","hashOfConfig":"43"},{"size":305,"mtime":1627790935064,"results":"68","hashOfConfig":"43"},{"size":14012,"mtime":1627921713136,"results":"69","hashOfConfig":"43"},{"size":379,"mtime":1627790935024,"results":"70","hashOfConfig":"43"},{"size":2130,"mtime":1627846114454,"results":"71","hashOfConfig":"43"},{"size":153,"mtime":1627790935061,"results":"72","hashOfConfig":"43"},{"size":1519,"mtime":1627790935025,"results":"73","hashOfConfig":"43"},{"size":806,"mtime":1627790935056,"results":"74","hashOfConfig":"43"},{"size":2617,"mtime":1627790935053,"results":"75","hashOfConfig":"43"},{"size":1467,"mtime":1627790935046,"results":"76","hashOfConfig":"43"},{"size":689,"mtime":1627790935040,"results":"77","hashOfConfig":"43"},{"size":373,"mtime":1627790935022,"results":"78","hashOfConfig":"43"},{"size":1082,"mtime":1627790935049,"results":"79","hashOfConfig":"43"},{"size":720,"mtime":1627790935051,"results":"80","hashOfConfig":"43"},{"size":2515,"mtime":1627790935027,"results":"81","hashOfConfig":"43"},{"size":181,"mtime":1627790935044,"results":"82","hashOfConfig":"43"},{"size":194,"mtime":1627790935048,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"2g4tzt",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\index.js",[],["170","171"],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\store.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\ScrollToTop.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\router.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\productApi.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\header\\Header.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actionType.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\axiosClient.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\NotFound.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Cart.js",["172"],"\nimport React, { useState, useEffect } from 'react'\nimport { Table, Button, Form, Input, Modal, Alert } from 'antd';\nimport './cart.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  incrementProject as incrementProjectAction,\n  decrementProject as decrementProjectAction,\n  deleteItemCart as deleteItemCartAction,\n  numberInputProject as numberInputProjectAction,\n  deleteListItemCart as deleteListItemCartAction,\n  payCart as payCartAction,\n  payCartNoUser as payCartNoUserAction,\n  addOrderNoUser as addOrderNoUserAction,\n  incrementProjectNoUser as incrementProjectNoUserAction,\n  decrementProjectNoUser as decrementProjectNoUserAction,\n  numberInputProjectNoUser as numberInputProjectNoUserAction,\n  deleteItemCartNoUser as deleteItemCartNoUserAction,\n  deleteListItemCartNoUser as deleteListItemCartNoUserAction,\n} from '../../redux/actions/userAction'\nimport {\n  // incrementCountPayByCart as incrementCountPayByCartAction,\n  // onchangeInputPayByCart as onchangeInputPayByCartAction\n  deleteItemByPayCart as deleteItemByPayCartAction\n} from './../../redux/actions/products'\nimport userApi from '../../api/userApi'\nimport ProductApi from '../../api/productApi'\n\nconst Cart = () => {\n  const dispatch = useDispatch()\n\n  const [form] = Form.useForm();\n\n  const user = useSelector(store => store.userReducer.user)\n  const dataProducts =  useSelector(store => store.userReducer.user.cart)\n  const [products, setProducts] = useState(dataProducts)\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [totalMoney, setTotalMoney] = useState(0)\n  const [visibleAlert , setVisibleAlert] = useState(false)\n\n  useEffect(() => {\n    if(user.id) {\n      fetchApi()\n    } else {\n      setProducts(dataProducts)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[user])\n\n  const columns = [\n    {\n      title: 'Sản phẩm',\n      dataIndex: 'img',\n      render: text => {\n        return (\n          <div className = \"cart__box-img\">\n            <img src={text} alt=\"\"/>\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Tên Sản Phẩm',\n      dataIndex: 'name',\n      render: text => {\n        return (\n          <div className = \"cart__box-text\">\n            <p>{text}</p>\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Giá sản phẩm',\n      dataIndex: 'price',\n      render: text => {\n        return (\n          <div className = \"cart__box-text\">\n            <p>{text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} VND</p>\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Số lượng',\n      dataIndex: 'count',\n      render: (text, record) => {\n        return (\n          <div className = \"cart__box-count\">\n            <button\n              className=\"cart__box-text--minus\"\n              onClick={() => decrement(record.id)}\n              disabled = {record.count === 1  ? true : false}\n            >-</button>\n              {/* <input\n                type=\"text\" value={record.count}\n                id={record.id}\n                onChange={getNumberInput}\n                // onClick={getValue}\n              /> */}\n              <input type=\"text\" value={text} onChange={getNumberInput} id={record.id}/>\n            <button\n              className=\"cart__box-text--plus\"\n              onClick={() => increment(record.id)}\n              disabled = {record.count > record.countPay  ? true : false}\n            >+</button>\n          </div>\n        )\n      }\n    },\n    {\n      title: 'ĐVT',\n      dataIndex: 'dvt',\n      render: text => {\n        return (\n          <div>\n            {text}\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Thành tiền',\n      dataIndex: 'thanhtien',\n      render: (text, record) => {\n        return (\n          <div className = \"cart__box-text\">\n            <p>{(record.price * record.count).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} VND</p>\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Xoá',\n      dataIndex: 'delete',\n      render: (text, record) => {\n        return (\n          <div className = \"cart__box--delete\">\n            <Button\n              danger\n              onClick={() => deleteItem(record.id)}\n            >\n              Xoá\n            </Button>\n            <div id={`${record.id}delete`}></div>\n          </div>\n        )\n      }\n    },\n  ];\n\n  const onSelectChange = async (selectedRowKeys) => {\n    await setSelectedRowKeys(selectedRowKeys);\n    let price = 0\n    selectedRowKeys.forEach(item => {\n      const index = dataProducts.findIndex(elem => elem.id === item)\n      price = price + (dataProducts[index].count * dataProducts[index].price)\n    })\n    setTotalMoney(price)\n\n    dataProducts.forEach(item => {\n      const index = selectedRowKeys.findIndex(elem => elem === item.id)\n      const buttonDelete = document.getElementById(`${item.id}delete`)\n      if (index !== -1) {\n        buttonDelete.classList.add(\"overlay\");\n      } else {\n        if (buttonDelete != null) {\n          buttonDelete.classList.remove(\"overlay\");\n        }\n      }\n    })\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  const fetchApi = async () => {\n    try {\n      const response = await userApi.getUserById(user.id)\n      setProducts(response.cart)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const getNumberInput = (event) => {\n    const { value, id } = event.target\n    //const index = listProduct.findIndex(item => item.id === Number(event.target.id))\n    // let a = 0\n    // if ( event.target.value === \"\" || isNaN(event.target.value)) {\n    //   setNumber(1)\n    // }else {\n    //   a = event.target.value\n    //   if (event.target.value > listProduct[index].countPay) {\n    //     a = listProduct[index].countPay\n    //   }\n    //   setNumber(a)\n    // }\n    const [...newData] = products\n     const abc =  newData.map(item => {\n      if (item.id === Number(id)) {\n        return {\n          ...item,\n          count: Number(value)\n        }\n      }\n      return item\n    })\n    // let price = 0\n    // selectedRowKeys.forEach(item => {\n    //   const index = dataProducts.findIndex(elem => elem.id === item)\n    //   price = price + (dataProducts[index].count * dataProducts[index].price)\n    // })\n    // setTotalMoney(price)\n    setProducts(abc)\n    const newNumber = {\n      value: value,\n      id: Number(id)\n    }\n\n    setTimeout(() => {\n      if (user.id) {\n        dispatch(dispatch(numberInputProjectAction(newNumber)))\n       } else {\n         dispatch(numberInputProjectNoUserAction(newNumber))\n       }\n    }, 100);\n    // dispatch(onchangeInputPayByCartAction(newNumber))\n  }\n\n  const sumOfMoney = () => {\n    let price = 0\n    selectedRowKeys.forEach(item => {\n      const index = dataProducts.findIndex(elem => elem.id === item)\n      price = price + (dataProducts[index].count * dataProducts[index].price)\n    })\n    setTotalMoney(price)\n  }\n\n  const increment = (id) => {\n     if (user.id) {\n      dispatch(incrementProjectAction(id))\n     } else {\n       dispatch(incrementProjectNoUserAction(id))\n     }\n     sumOfMoney()\n  }\n\n  const decrement = (id) => {\n    if (user.id) {\n      dispatch(decrementProjectAction(id))\n     } else {\n       dispatch(decrementProjectNoUserAction(id))\n     }\n    sumOfMoney()\n  }\n\n  const deleteItem = (id) => {\n    if (user.id) {\n      dispatch(deleteItemCartAction(id))\n     } else {\n       dispatch(deleteItemCartNoUserAction(id))\n     }\n  }\n\n  const deleteListItem = () => {\n    // const newArr = []\n    // selectedRowKeys.forEach(item => {\n    //   newArr.push(listProduct[item - 1].id)\n    // })\n    console.log(selectedRowKeys);\n    setLoading(true)\n\n    if (user.id) {\n      dispatch(deleteListItemCartAction(selectedRowKeys))\n     } else {\n       dispatch(deleteListItemCartNoUserAction(selectedRowKeys))\n     }\n    setTimeout(() => {\n      setSelectedRowKeys([])\n      setLoading(false)\n     }, 500);\n  };\n\n  const handleCancel = () => {\n    setVisibleAlert(false)\n  }\n  //pay cart no user\n  const onFinish = async (values) => {\n    if (values.username !== undefined && values.phone !== undefined && values.email !== undefined && values.address !== undefined) {\n      const listPayCart = []\n      const newListKey = []\n      const newListKeyFail = []\n\n      const productApi = await ProductApi.getAll()\n\n      selectedRowKeys.forEach(item => {\n        products.forEach(elem => {\n          if (item === elem.id) {\n            const index = productApi.findIndex(a => a.id === elem.id)\n            if (productApi[index].countPay > elem.count ) {\n              newListKey.push(item)\n              listPayCart.push(elem);\n            } else {\n              newListKeyFail.push(item)\n            }\n          }\n        });\n      })\n      const ojb = {\n        listId : listPayCart,\n        profile: values\n      }\n      dispatch(payCartNoUserAction(ojb))\n      dispatch(addOrderNoUserAction(ojb))\n      dispatch(deleteItemByPayCartAction(listPayCart))\n      onSelectChange([])\n      setSelectedRowKeys([])\n      onReset()\n      if (newListKeyFail.length > 0) {\n        setVisibleAlert(true)\n      }\n    }\n  };\n\n  // pay cart user\n  const PayCart = async () => {\n     if (user.id) {\n      const productApi = await ProductApi.getAll()\n      const listPayCart = []\n      const newListKey = []\n      const newListKeyFail = []\n\n      selectedRowKeys.forEach(item => {\n        products.forEach(elem => {\n          if (item === elem.id) {\n            const index = productApi.findIndex(a => a.id === elem.id)\n            if (productApi[index].countPay > elem.count ) {\n              newListKey.push(item)\n              listPayCart.push(elem);\n            } else {\n              newListKeyFail.push(item)\n            }\n          }\n        });\n      })\n        dispatch(payCartAction(listPayCart))\n        //// dispatch(addOrderAction(selectedRowKeys))\n        if (newListKeyFail.length > 0) {\n          setVisibleAlert(true)\n        }\n        dispatch(deleteItemByPayCartAction(listPayCart))\n        onSelectChange([])\n        setTotalMoney(0)\n        setTimeout(() => {\n          dispatch(deleteListItemCartAction(newListKey))\n          setSelectedRowKeys([])\n        }, 500)\n    } else {\n      setVisible(true)\n    }\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    setVisible(false)\n  };\n\n  const hasSelected = selectedRowKeys.length > 0;\n\n  return (\n    <div className=\"cart\">\n      <Table\n        rowKey=\"id\"\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={products}\n      />\n      <h2>Tổng tiền: <span>{totalMoney.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span> VND</h2>\n      <div className=\"cart__button\">\n        <Button\n          type=\"primary\"\n          danger\n          onClick={deleteListItem}\n          disabled={!hasSelected}\n          loading={loading} >\n          Xoá\n        </Button>\n\n        <Button\n          className=\"cart__button--pay\"\n          type=\"primary\"\n          onClick={PayCart}\n          disabled={!hasSelected}\n          loading={loading}\n          >\n          Tiến hành thanh Toán\n        </Button>\n      </div>\n      <div className=\"cart__mymodel\">\n        <div className=\"cart__mymodal__body\">\n          <Modal\n            visible={visible}\n            title=\"Điền thông tin\"\n            // onOk={handleOk}\n            // onCancel={handleCancel}\n            className=\"modalCart\"\n          >\n            <Form\n              name=\"basic\"\n              form={form}\n              initialValues={{\n                remember: true\n              }}\n              onFinish={onFinish}\n            >\n              <label>Họ tên:</label>\n              <Form.Item\n                name=\"username\"\n                rules={[{ required: true, message: 'Please input your username!' },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value = \"\") {\n                      const re = /^[a-zA-Z]+$/;\n                      if (value.length > 0 && !re.test(value)) {\n                        return Promise.reject(\"Minimum 10 characters\");\n                      } else {\n                        return Promise.resolve();\n                      }\n                    }\n                  })\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <label>Số điện thoại:</label>\n              <Form.Item\n                name=\"phone\"\n                rules={[{ required: true, message: 'Please input your phone!' },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value = \"\") {\n                      const re = /((09|03|07|08|05)+([0-9]{8})\\b)/g;\n                      if (value.length > 0 && !re.test(value)) {\n                        return Promise.reject(\"vui lòng nhập ít hơn 10 kí tự\");\n                      } else {\n                        return Promise.resolve();\n                      }\n                    }\n                  })\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <label>Email:</label>\n              <Form.Item\n                name=\"email\"\n                rules={[{ required: true, message: 'Please input your email!' },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value = \"\") {\n                      //eslint-disable-next-line\n                      const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n                      if (value.length > 0 && !re.test(value)) {\n                        return Promise.reject(\"email chưa đúng đinh dạng\");\n                      } else {\n                        return Promise.resolve();\n                      }\n                    }\n                  })\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <label>Địa chỉ:</label>\n              <Form.Item\n                name=\"address\"\n                rules={[{ required: true, message: 'Please input your address!' },\n                  // ({ getFieldValue }) => ({\n                  //   validator(rule, value = \"\") {\n                  //     if (value.length > 0 && value.length < 10) {\n                  //       return Promise.reject(\"Minimum 10 characters\");\n                  //     } else {\n                  //       return Promise.resolve();\n                  //     }\n                  //   }\n                  // })\n                ]}\n              >\n                <Input />\n              </Form.Item>\n                <Form.Item  className=\"groupButton\">\n                  <Button className=\"btnSubmit\" type=\"primary\" danger onClick={onReset}>\n                    Huỷ\n                  </Button>\n                  <Button className=\"btnSubmit\" type=\"primary\" htmlType=\"submit\" >\n                    Đặt hàng\n                  </Button>\n                </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n        <div className=\"cart__mymodel__alert\">\n        <Modal\n          title=\"Thông báo\"\n          visible={visibleAlert}\n          onCancel={handleCancel}\n        >\n          <p>Bạn đang có một vài sản phẩm vượt quá số lượng</p>\n          <p>bạn có thể giảm số lượng đi và tiếp tục mua hàng!</p>\n          <div className=\"cart__mymodel__alert-btn\">\n            <Button type=\"primary\" onClick={handleCancel}>\n              Dồng ý\n            </Button>\n          </div>\n        </Modal>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Cart\n","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\ProfileProduct.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\SearchProductByName.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\Home.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\login\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\signUp\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\userAction.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\MenuItem.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\menu\\search\\Search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\products.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\reducer\\user.js",["173"],"import userApi from '../../api/userApi';\nimport orderApi from '../../api/order';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  GET_USERS,\n  ADD_CART,\n  INCREMENT_PROJECT,\n  DECREMENT_PROJECT,\n  DELETE_ITEM_CART,\n  NUMBER_INPUT,\n  DELETE_LIST_ITEM_CART,\n  PAY_CART,\n  ADD_CART_BY_PROFILE,\n  PAY_CART_NO_USER,\n  ADD_CART_NO_USER,\n  ADD_ORDER,\n  ADD_CART_BY_PROFILE_NO_USER,\n  ADD_ORDER_NO_USER,\n  INCREMENT_PROJECT_NO_USER,\n  DECREMENT_PROJECT_NO_USER,\n  DELETE_ITEM_CART_NO_USER,\n  DELETE_LIST_ITEM_CART_NO_USER,\n  NUMBER_INPUT_NO_USER,\n  PUSH_CART_LOCAL_IN_CART_USER,\n} from '../actionType'\n\nconst initialState = {\n  user: {\n    cart: [],\n  }\n}\n\nconst useReducer  = (state = initialState, action) => {\n  const user = {...state.user}\n  let cart = user.cart\n  const order = user.order\n  const idUser = user.id\n\n  switch (action.type) {\n    case GET_USERS:{\n      return {\n        ...state,\n        user: action.payload\n      }\n    }\n\n    case ADD_CART: {\n      let cartAction = user.cart\n      let newUser = {}\n      // if (cartAction.length >= 0) {\n      //   const index = cartAction.findIndex(item => item.id === action.payload.id)\n      //   if (index !== -1) {\n      //     const newData = {\n      //       ...cartAction[index],\n      //       count: cartAction[index].count + 1,\n      //     }\n\n      //     cartAction.splice(index, 1 , newData)\n      //     newUser = {\n      //       ...user,\n      //       cart: cartAction\n      //     }\n\n      //     userApi.addCart(user.id, newUser)\n      //   } else {\n      //     const newData = {\n      //       id: action.payload.id,\n      //       name: action.payload.name,\n      //       img: action.payload.img,\n      //       price: action.payload.price,\n      //       count: 1,\n      //     }\n      //     cartAction.push(newData)\n      //     newUser = {\n      //       ...user,\n      //       cart: cartAction\n      //     }\n\n      //     userApi.addCart(user.id, newUser)\n      //   }\n      // } else {\n      //   const newData = {\n      //     id: action.payload.id,\n      //     name: action.payload.name,\n      //     img: action.payload.img,\n      //     price: action.payload.price,\n      //     count: 1,\n      //   }\n      //   cartAction.push(newData)\n      //   newUser = {\n      //     ...user,\n      //     cart: cartAction\n      //   }\n      //   userApi.addCart(user.id, newUser)\n      // }\n      const index = cartAction.findIndex(item => item.id === action.payload.id)\n      if (index !== -1) {\n        const newData = {\n          ...cartAction[index],\n          count: cartAction[index].count + 1,\n        }\n\n        cartAction.splice(index, 1 , newData)\n        newUser = {\n          ...user,\n          cart: cartAction\n        }\n\n        userApi.addCart(user.id, newUser)\n      } else {\n        const newData = {\n          id: action.payload.id,\n          name: action.payload.name,\n          img: action.payload.img,\n          price: action.payload.price,\n          countPay: action.payload.countPay,\n          count: 1,\n        }\n        cartAction.push(newData)\n        newUser = {\n          ...user,\n          cart: cartAction\n        }\n\n        userApi.addCart(user.id, newUser)\n      }\n      return {\n        ...state,\n        user: newUser\n      }\n    }\n    /* falls through */\n\n    case ADD_CART_BY_PROFILE: {\n      let cartAction = user.cart\n      let newData = {}\n      let newUser = {}\n      const index = cartAction.findIndex(item => item.id === action.payload.product.id)\n      if (index !== -1) {\n        newData = {\n          ...cartAction[index],\n          count: cartAction[index].count + action.payload.number,\n        }\n\n        cartAction.splice(index, 1 , newData)\n        newUser = {\n          ...user,\n          cart: cartAction\n        }\n        userApi.addCart(user.id, newUser)\n      } else {\n        newData = {\n          id: action.payload.product.id,\n          name: action.payload.product.name,\n          img: action.payload.product.img,\n          count: action.payload.number,\n          countPay: action.payload.countPay\n        }\n        cartAction.push(newData)\n        newUser = {\n          ...user,\n          cart: cartAction\n        }\n        userApi.addCart(user.id, newUser)\n      }\n      return {\n        ...state,\n        user: newUser\n      }\n    }\n\n    case INCREMENT_PROJECT:{\n      const index = cart.findIndex(item => item.id === action.payload)\n        if (index !== -1) {\n          const number = cart[index].count + 1;\n          if (number >= cart[index].countPay) {\n            cart[index].count = cart[index].countPay\n          } else {\n            cart[index].count =number\n          }\n        }\n        userApi.addCart(user.id, user)\n        return {\n          ...state,\n          user: user\n        }\n    }\n\n    case DECREMENT_PROJECT:{\n      const index = cart.findIndex(item => item.id === action.payload)\n        if (index !== -1) {\n          if (cart[index].count  - 1 === 0 ) {\n            cart[index].count = 1\n          }\n          else {\n            cart[index].count = cart[index].count  - 1\n          }\n\n        }\n\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case NUMBER_INPUT: {\n      const index = cart.findIndex(item => item.id === action.payload.id)\n      if(isNaN(action.payload.value) || action.payload.value <= 0) {\n\n          cart[index].count = 1\n\n          userApi.addCart(user.id, user)\n          return {\n            ...state,\n            user: user\n          }\n      } else {\n        if (Number(action.payload.value) > cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = Number(action.payload.value)\n        }\n\n        userApi.addCart(user.id, user)\n        return {\n          ...state,\n          user: user\n        }\n      }\n    }\n\n    case DELETE_ITEM_CART: {\n      user.cart = user.cart.filter(item => item.id !== action.payload)\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_LIST_ITEM_CART: {\n      action.payload.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem)\n      });\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case PAY_CART: {\n      const listProduct = []\n      let money = 0\n      action.payload.forEach(item => {\n        cart.forEach(elem => {\n          if (item.id === elem.id) {\n            listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: idUser,\n        listProduct: listProduct,\n        money: money,\n        status: 0,\n        dateCreate: new Date(),\n        dateUpdate: new Date()\n      }\n      order.push(newOder.id)\n      orderApi.addOrder(newOder)\n      userApi.addCart(user.id, user)\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case PAY_CART_NO_USER: {\n      action.payload.listId.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem.id)\n      })\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case ADD_CART_NO_USER: {\n      const cartLocal = localStorage.getItem('cart')\n      if(cartLocal) {\n        let newCartLocal = JSON.parse(cartLocal)\n        const index = newCartLocal.findIndex(item => item.id === action.payload.id)\n        if (index !== -1) {\n          const newData = {\n            ...newCartLocal[index],\n            count: newCartLocal[index].count + 1,\n          }\n\n          newCartLocal.splice(index, 1 , newData)\n        } else {\n          const newData = {\n            id: action.payload.id,\n            name: action.payload.name,\n            img: action.payload.img,\n            price: action.payload.price,\n            countPay: action.payload.countPay,\n            count: 1,\n          }\n          newCartLocal.push(newData)\n        }\n        localStorage.setItem('cart', JSON.stringify(newCartLocal))\n        const newUser = {\n          ...user,\n          cart: newCartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n      } else {\n        const cartLocal = []\n        const newData = {\n          id: action.payload.id,\n          name: action.payload.name,\n          img: action.payload.img,\n          price: action.payload.price,\n          countPay: action.payload.countPay,\n          count: 1,\n        }\n        cartLocal.push(newData)\n        localStorage.setItem('cart', JSON.stringify(cartLocal))\n        const newUser = {\n          ...user,\n          cart: cartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n      }\n    }\n\n    case ADD_CART_BY_PROFILE_NO_USER: {\n      let cartLocal = JSON.parse(localStorage.getItem('cart'))\n      let newData = {}\n        const index = cartLocal.findIndex(item => item.id === action.payload.product.id)\n        if (index !== -1) {\n          newData = {\n            ...cartLocal[index],\n            count: cartLocal[index].count + action.payload.number,\n          }\n\n          cartLocal.splice(index, 1 , newData)\n          localStorage.setItem('cart', JSON.stringify(cartLocal))\n        } else {\n          newData = {\n            id: action.payload.product.id,\n            name: action.payload.product.name,\n            img: action.payload.product.img,\n            price: action.payload.product.price,\n            count: action.payload.number,\n          }\n          cartLocal.push(newData)\n          localStorage.setItem('cart', JSON.stringify(cartLocal))\n        }\n        const newUser = {\n          ...user,\n          cart: cartLocal\n        }\n        return {\n          ...state,\n          user: newUser\n        }\n    }\n\n    case ADD_ORDER: {\n      // const listProduct = []\n      let money = 0\n      action.payload.forEach(item => {\n        cart.forEach(elem => {\n          if (item === elem.id ) {\n            // listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: idUser,\n        listProduct: action.payload,\n        money: money,\n        status: 0,\n        dateCreate: new Date(),\n        dateUpdate: new Date()\n      }\n      orderApi.addOrder(newOder)\n      return state\n    }\n\n    case ADD_ORDER_NO_USER: {\n      // const listProduct = []\n      let money = 0\n      action.payload.listId.forEach(item => {\n        cart.forEach(elem => {\n          if (item === elem.id ) {\n            // listProduct.push(elem)\n            money = money + (elem.price * elem.count)\n          }\n        })\n      })\n      const newOder = {\n        id: uuidv4(),\n        idUser: '',\n        listProduct: action.payload.listId,\n        address: action.payload.profile.address,\n        email: action.payload.profile.email,\n        phone: action.payload.profile.phone,\n        username: action.payload.profile.username,\n        money: money,\n        status: 0,\n        dateCreate: new Date(),\n        dateUpdate: new Date()\n      }\n      console.log(newOder);\n      //orderApi.addOrder(newOder)\n      return state\n    }\n\n    case INCREMENT_PROJECT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload)\n      if (index !== -1) {\n        const number = cart[index].count + 1;\n        if (number >= cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = number\n        }\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DECREMENT_PROJECT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload)\n      if (index !== -1) {\n        if (cart[index].count  - 1 === 0 ) {\n          cart[index].count = 1\n        }\n        else {\n          cart[index].count = cart[index].count  - 1\n        }\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_ITEM_CART_NO_USER: {\n      user.cart = user.cart.filter(item => item.id !== action.payload)\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case DELETE_LIST_ITEM_CART_NO_USER: {\n      action.payload.forEach(elem => {\n        user.cart = user.cart.filter(item => item.id !== elem)\n      });\n      localStorage.setItem('cart', JSON.stringify(user.cart))\n      return {\n        ...state,\n        user: user\n      }\n    }\n\n    case NUMBER_INPUT_NO_USER: {\n      const index = cart.findIndex(item => item.id === action.payload.id)\n      if(isNaN(action.payload.value) || action.payload.value <= 0) {\n          cart[index].count = 1\n          localStorage.setItem('cart', JSON.stringify(cart))\n          return {\n            ...state,\n            user: user\n          }\n      } else {\n        if (Number(action.payload.value) > cart[index].countPay) {\n          cart[index].count = cart[index].countPay\n        } else {\n          cart[index].count = Number(action.payload.value)\n        }\n\n        localStorage.setItem('cart', JSON.stringify(cart))\n        return {\n          ...state,\n          user: user\n        }\n      }\n    }\n\n    case PUSH_CART_LOCAL_IN_CART_USER: {\n      let newUser = action.payload.user\n      let cartLocal = action.payload.cartLocal\n      cartLocal.forEach(item => {\n        const index = newUser.cart.findIndex(elem => elem.id === item.id)\n        if (index !== -1) {\n          const newData = {\n            ...newUser.cart[index],\n            count: newUser.cart[index].count + item.count,\n          }\n          newUser.cart.splice(index, 1 , newData)\n        } else {\n          newUser.cart.push(item)\n        }\n      })\n      userApi.addCart(newUser.id, newUser)\n      return state\n    }\n\n    break\n    default:\n      return state\n  }\n}\n\nexport default useReducer\n","C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\userApi.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\CardItem.js",[],["174","175"],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\redux\\actions\\search.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\Slide\\Slide.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\sort\\Sort.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\search\\SearchProduct.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\groupProduct\\index.jsx",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\MyPagination.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\api\\order.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\listBanner\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\listBannerheader\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\footer\\Footer.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\contact\\index.js",[],"C:\\Users\\PC\\Desktop\\project_demo\\project\\src\\components\\product\\introduce\\index.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":3,"column":45,"nodeType":"182","messageId":"183","endLine":3,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":535,"column":5,"nodeType":"186","messageId":"187","endLine":535,"endColumn":10},{"ruleId":"176","replacedBy":"188"},{"ruleId":"178","replacedBy":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["190"],["191"],"no-global-assign","no-unsafe-negation"]